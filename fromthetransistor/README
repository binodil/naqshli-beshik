# From the Transistor to the Web Browser

Discover by yourself! 
- "Closer to being real." -- @geohot

Table of content:
1. Cheating our way past the transistor.
2. What language is hardware coded in?
3. Processor. What is a processor anyway?
4. Compiler. A 'high' level language.
5. Operating System: Software we take for granted.
6. Browser: Coming online.
7. Physical: Running on real hardware.



1. Cheating our way past the transistor
  - Transistor and relay and switches. How vacuum transistors work?
  - Truly parallel?!
  - Describe how FPGAs are buildable using transistors?
 
  - Is ICs are just collections of transistors?
  - What is LUTs?



2. To Be Continued!
3. TBC
4. TBC
5. TBC
6. TBC
7. TBC


Credit to https://github.com/geohot/fromthetransistor

#---------- http://www.pbs.org/transistor/science/info/chip.html -------
Integrated Circuits (ICs) are simply a square of silicon which has electric circuit, numerious transistors, wires and other electric devices.
IC are possible thanks to first inventors Jack Kilby and Robert Noyce (1958). Chips are not build upon wood, stones, it is built on semiconductor crystal. Conductor is a material which allow a flow of electricity. The chip starts as a thin wafer of P-type silicon. Components are added at certain temperature. Chemecals are added to block alectricty or to allow at certain places. NEx wafer layer is added on top of that wafer.

Who is Shockley? What was his idea in 1945?He failed to build it?
1948, Brattain and Bardeeen build first working transistor, the germanium point-contact transistor. Then what kind of architecture he applied to the chip design?
Based on his idea, John Atalla developed a new IC. What is it in 1960?
TOday most IC are based on John Atalla idea.
What is MOS-FETS?
http://www.pbs.org/transistor/science/info/transmodern.html

-----------
What is the desing of it? So transistor has 3 IO, power, in and out. then makes incoming signal 0 or 1.

Lessons from the Early Days of Semiconductors: https://youtu.be/qhJaq3kl6Dc?si=nRYI31Lxn2ad3liF
1799 - Volta (Battery) (stack of item with zink)
1831 - Faraday
what is a galvanometer?
1833? - Semiconductors wheatstone bridge

He is able to measure the resistance of natural mineral, metals. He liked a silver based conductor. That was a semiconductor. Silver solfied, the resistance got less as it is heated up. Faraday is a smart guy. 
1877 - Braun | He was interested in why a lot of minerals act in that way?
1879 - Hall (U.S. graduate) - Hall Effect. What is it? Hint: before the electron discovery and positive and negative electrons are not discovered.
1906 (Pickard) Silicon Point contact detector | What is the first application of the semiconductor? R**** in ship. He made experiments with different materials to buiild consistant semiconductor detector.
1907 - 1911  Baedeker | COntrolled Doping of Semiconductor
1920s - Home Crystal Sets
1925 - Lilienfeld | MESFET - No amplifiers at that time in radio receivers. He wanted to build amplifier which a semiconductor.
1928 - Lilienfeld - MOSFET - Metal oxyde semiconductor Field Effect transistor. Every modern device uses it in 21th century

1928 - 1931 : Bloch, Peierls, Wilson, Pauli, Heuisenberg, Band Picture |  
1939 WWII began. Everybody in the war.
1940 - 1946 MIT RAD Lab in U.S. | People are working in vacuum tubes, radio. But radar sets tot he airplanes in the military
Our story of Controlled electric current

1941 - Rad Lab
What is the silicon - It is a material. Silicon breast, silicon valley. Silicon is achemical element.Atom number is 14. (Si). Adundant element next to the oxygen.
1942 - Schottky Barrier theory & Experiment
# Key | Point-Contact Transistor | A contractor for the Rad Lab
1948 - Bardeen & Brattain | Point-Contact Transistor

How the machine code actually controls the chip!?

1955 - Derik & Frosch | Diffusion | Oxyde Masking!!!

Diffuse the things right, you can diffuse. It is a diffused silicon transistor.
Diffusion technique happends in the certain temperature and in certain temperature you can add more items.
1956 - Tannenbaum, Thomas, Lee. Huge success
1954 - PSI (Pasific semiconductor industry? (Is it correct)
Bright Ph.D form new company the diffusion. F company

1959 - Kilby - All-semiconductor circuit in a semiconductor.
Technology is booming!!!!!
Planar Process - 1959 Hoerni | From "Makers of the microchips"!



#-----------
We can use NandGame (simulator) 

Default Off relay
C: 1 and in: 1 --> return 1
C:0 and in: 1 --> return 0
C:1 and in:0 --> return 0
C:0 and in:0 --> return 0

Default ON relay
C:1 and in: 1 --> return 0
C:0 and in: 1 --> return 1
C:1 and in: 0 --> return 0
C:0 and in: 0 --> return 0
#--------------------------------

nand component: (it must real)
a: 1 and b: 1 -> 0
a: 0 and b: 1 -> 1
a: 0 and b: 0 -> 1
a:1 and b: 0 -> 1

-------------------
Inv component:
o -> 1
1 -> 0
-----------------
AND operation
0 and 0 -> 0
1 and 0 -> 0
0 and 1 -> 0
1 and 1 -> 1
----------------
OR operation
0 and 0 -> 0
0 and 1 -> 1
1 and 0 -> 1
1 and 1 -> 1
_______________

XOR operation
0 and 0 -> 0 
0 and 1 -> 1
1 and 0 -> 1
1 and 1 -> 0

001 - 1
010 - 2
011 - 3
100 - 4
101 - 5
110 - 6
111 - 7

11 & 11 -> 110
01 & 11 -> 100
10 & 11 -> 101

11 & 01 -> 100
01 & 01 -> 010
10 & 10 -> 100
01 & 10 -> 011

01 == 001 == 0001 == 0000000000000001
10 == 010 == 0010 == 0000000000000010 # last one is 16-bit


10 - 00 = 10  (10 + 00 + 10) = 01
10 - 01 = 01  (10 + 10  = 01
11 - 01 = 10
11 - 10 = 01

A + (B_invert) + B ?
A - B = C
A < C
C = Lim - A + Lim - B + 1
01 + 11 + 1 = 10
01 + 10 + 1= 01A

A + (Lim-B) = 
A- B = C = Lim -

16 bit: 1111111111111111
16 bit: 0000000000000000








#----------RISC-V----------#
RISC-V(five) is an open-source CPU architecture
Most PC uses x86 CPU architecture.
Intel Core is also a cpu architecture. CPU is set of instructions.
AMD Ryzen is also a CPU architecture.
Qualcomm Snapdragon is also CPU architecture.
Apple M1, Nvidia Tegra, Intel Pentium, Intel Atom, Intel 8086, Motorola 6809, Intel Core i7, Intel Core i5, Intel Core i9 (is a architecture name), Nvidia Ampere, AMD k5, AMD Duron, Nvidia Turing, IBM smth, etc. IBM 704 (1950s cpu architecture). 8 bit archtiecture, Intel 8008. Ancestor is Intel 4004 based on binary-coded decimanl (BCD). RISC(reduced instruction set computing) vs CISC (complex instruction set computing). MISC (minimal instruction set computer), , VLIW (Very long instruction word) computers.

CPU architecture in small device and phones it is ARM architecture

RISC-V is similar to ARM, but it is much cleaner and it is open-source.


Verilog is not programming language as python. It is much low-lever
We have bin(0b0000), oct(0o000), hex (0x000)

We have Ops such as LUI, LOAD, STORE, AUIPC, BRANCH, JAL, JALR, IMM, OPS, MISC, SYSTEM
We have Funct3 as ADD, SUB, SLLI, SLYU, XOR, OR, AND, SRL

# this is how the microprocessor are working in the low level. 

Each process has a step: 
  1) Intruction fetch
  2) Instruction decode
    - to J-type instruction
    - to I-type instruction
    - to other instruction
  3) Execute
  4) Access
  5) Write-back

### LESSON: Use several tabs (windows in tmux) to (1) write in vim; (2) run the code; (3) browse source code, etc.
In tmux to switch between tmux, you use arrows use ctrl+numbers. use ctrl+b equivalaent twice to switch to previous window.
In order to create new window use ctrl+c. it creates new window. If you need more hints on shortcuts use <<?>>

Installing Linux distribution to the M series chip is not completed yet. It takes time. The macos with Intel chips, so they have intel cpu archtiecture, they can replace the OS with the linux ubuntu. It is well known method. 



What is the register? In the instruction development?
Regestors are zero, ra, sp, gp, tp, ect.
Each register has ABI Name.
x0 is zero (hard-wired zero). What is a saver? Assembler mnemonics, so x0-x31 they store, return address, stack pointer, global pointer, thread pointer, temporary register, etc, floating point temopraries, etc


There are many types of instructions.

What is the clock in the varelog? Is it the speed of  each single opearion t be ondivte.


How to code in verilog??
filename.v is the sample of the verilog file

WE need a verilog emulator. In MacOS we can use bew install icarus-verilog/ 
In Linux, ypou can use sudo apt install iverilog.


In verilog, you need to think in 4 dimensions. 

Display values in hex, 

We need to implement decoder


Verilog is a language. Memory interface must be implememted.


CPU code of verilog is compiled and deployed to the fpga. CPU is runnning in 50MHz;
Verilog is used to write own chip architecture.
CPU are now running in 6Hz to visually debug and see how it was working.

Inv erilog the indexing in inclusive. arr[1:5], here it is inclusive

Xilinx Zynq is a board name

Accelerator which does not have CCIX, will be out-competed! (Cache Coherent Interconnect for Accelerators)
-----

XILINX is AI company which makes AI based FPGA, Chips.


Okay ! (https://gfxcourses.stanford.edu/cs149/fall22content/media/multicorearch/02_basicarch_HAzYV7A.pdf)
A program is a list of processor instructions!
Your python code --> interpreted into the assembly code.
What does a processor do? It perform computations like binary, trinary, arithmetic. Not exactly!
It executes instructions. To execute each instruction it should fetch, read, execute, and go back again.

In processor, its first task is to determine what instructions to run next. (Fetch/decode)
Next, we use ALU (execution unit) --> execution unit:performs the operation described by an instruction, which may modify values in the processor's registers or the computer's memory.
Lastly, registers: maintain program state: store value of variables used as inputs and outputs to operations.

One instruction can be run per clock.

in the assembly code, it will be like instuction code-whitespace-registers-memory-addr

We have superscalar processor (This processor can decode and execute up to two instructions per clock)

Superscalar execution: processor automatically finds indeoendent instructions in an instruction sequence and can execute them in parallel on multiple execution units. Wow! Two cores means two instructions can be run in parallel. It depends on the intructions, which compiled in assemble. If original code is written with care for multithreading then it can be achieved. In practice you do not receive 2x speed with 2 cores. Instead it might be 1.5x speed or lower.
Does intel sucks too?

Intel Comet Lake 10th generation core i9 10 core cpu. It has 10 cores. So 10 instructions can be run in parallel in theory.

nanochip is the same for cpu and gpu, but because they goal is different the placement of object is different.
NVIDIA Ampere GPU has 84 "SM" blocks (2020)

Intel Xeon Phi Knights Corner has 72 core CPU. That is a massive power, is not it! (2016)


Apple A13: Two big cores + four small cores (2019)
Iphone Xr has A12 chip. They are basaed on ARM architecture. They include superscalar execution. That is awesome.
A12 was launched in 2018. Discontinued in 2022. designed by Apple (actually by a startup chip company). Manufacturer is TSMC. CPU clock rate of A12 is up to 2.49 GHz. Cache L1 cache (128 KB) L2 cache 8 MB. ARM is instruction sets. They used A64-ARMv8.3-A; Number of transistors is 6.9 billions. Cores: 6 cores + GPU cores. A12 has video codec encoding support for HEVC , H.264. So thet chip has instructions for that codecs.

Teardown of Iphone Xr: https://www.ifixit.com/Teardown/iPhone+XR+Teardown/114123


To sum up, there are three different forms of parallel execution in the literature:
1) Superscaler -> exploit ILP within an isntruction stream. Process different instrucitons from the same instruction stream in parallel (within a core).  
2) SIMD: multiple ALUs (Arithmetic logicl units) controlled by same instruction (within a core).
  - Efficient for data-parallel workloads.

3) Multi-core: use multiple processing cores;
  - provides thread-level prallelism. Simulataneously execute a completely different instruction stream on each core.
  - Software created threads to expose parallelism to hardware (via threading API)

Any program's memory is organized as an array of bytes. Each byte is identified by its address in memory. A byte stored at address 0x8 has value of 32. what is 32? We have instuction like load. It means load a value from memory to the register R0 or equivalent.

Stalls:
A processor stalls when it cannot run the next instruction in an instruction stream because of a dependency on a previous instruction that is not yet completed. Major source of stall is low speed or failure in loading from memory to the chip.


Recall, memory is just an array of values!  So processor has registers and these registers values are stored in caches. False!!!!!! Not like that!!!!! Caches such as L1 and L2 are just on-chip memory. You still need to load and store to that memory. Just the loading and storing time will be much better than reading from RAM.
What data does processor decide to keep in cache. Caches are usually very small.Keywords: Direct mapped cache, set-associative cache, cache line?
We can round it as LRU policy for now (least recently used) - to make rooom for new data, throw out the data in the cache that was assessed the longest time ago.

data access time in L1 cache is the fasters. maybe 4 number of cycles in 4 GHz. Data in L2 and L3 are 12 cycles and 38 cycles in 4 GHz clock. Access the data in DRAM in best case 248 cycles in 4 GHz board.

Pre-fetching to the cache reduce the stalls (latency).

Multi-threading reduces stalls> How? they are just a bunch of processors, but still need to access memory anyway!

There is the key takeaway!

What is the bandwidth? 
  - So bandwidth is the number of items can be carried; Lets say you need to do a laundry. Bandwdth is one if you take one cloth, wash, dry total (105 minutes). Badwidth of washer can be improved to 10 kg of cloth.

How would you solve the element-wise vector multiplication of A and B vector of 1 billion values? A for loop?

What is a bandwidth? Why it is a problem?
What is the latency?
How does multi-threading can help us?
How does not GPU care about multi-threading.

Awesome and high quality course is in https://gfxcourses.stanford.edu/cs149/fall24/

Learning GPU and CUDA but faster: https://gfxcourses.stanford.edu/cs149/fall22content/media/multicorearch/02_basicarch_HAzYV7A.pdf

Do the programming assignments!! Simple renderer in CUDA, Optimzie DNN, Schedule task, etc

Standford resouces are great and they have solid exeprices, assignments and projects to do in the course. But they are not the 100% fit to your attitude for learning. So make sure your attitude is first, then the stanford is second. Stanford goal is to reach to more people. Make it more accessable for people, not for you only.

Assembly code has a several parts 1) name of the function and the memory address where the code for this function starts, 2) Memory addresses and corresponding machine code in hexadecimal codes. Different instruction has different byte lengths. 3) human readible version of the assemble code for each instruction.


Each instruction has an operation name (opcode). Each instruction can also have arguments (operands). There are different opcodes. Some opcodes like add, mov,ld, st, etc, may have arguments with them like $0x1,%eax;


truth is that c-code allows us to write code, work with variables, types in higher level abstraction so we are machine or assemble agnostic!

Each processor has a registers

In x86 there are 16 registers available. They store a variables. They are fast read/write memory slots.
Data which needs to be calculated is moved to the register first. So instruction one is to write to the register. second instruction is to read from register and do logital operation on it like 'NOT'. 


Example:
-------
int sum = x + y;  ||||  1) copy x into register 1; 2) copy y into register 2, 3) add register 1 and register 2; 4) write register 1 to memory for sum.



Instruction sets are x86-64; ARM, MIPS, RISC-V
ATmega328 is a chip in most Arduino. It is based on the RISC 8bit Hardard architecture. Performance is 20 MHz.
SRAM is 2 KB, Flash memory (32 KB?)


ESP32-C3 is on NodeMCU board. It has a single-core 32-bit RISC-V CPU with 160MHz clock. It has a wifi and a bluetooth support too!


https://web.stanford.edu/class/archive/cs/cs107/cs107.1258/lectures/10/Lecture10.pdf

We can retrieve the information with a gcc and assembler code.

mov    $0x0,%rdx  -> maybe long x = 0;
mov    %rdx,%rcx  -> maybe long x = y;
mov    $0x42,(%rdi) -> maybe *ptr = 0x42;
mov    (%rax,%rcx,8),%rax  ->  maybe long x = arr[i];

https://godbolt.org/ --> multi compliter-assembly code review!!
It has all of them! Both ARM, x86-64, RISC-V, etc.

%rip register stores the address of the next instruction to execute (it is in x86-64),
Instrcutions are just bytes. In memory we have stack, heat, data and text (code). All instruction is just a byte at special address. Program counter (PC) is the well known name for %rip. In the end of each instuction there is a %rip% instruction.


Python code does not compile, instead it is interpreted with python3.12, python3.10 and etc. They follow similar assembly format.


Practice the arduino or ESP-C3 code.   

Yes, maybe I do not know the hardware, but I am sure the answer is pretty obvious from the combination in toolbox. I do not know the SR Latch. But it is basically a set/reset latch block. It is such a special block so it has a state of 1 bit.





Why TSMC is the most well-known FAB? What kind of business does other chip maker companies do? Sell chips to customer. But except TSMC, and maybe GlobalFoundries, other can not share their chip designs companies like Samsung. So the fabless companies mostly rely on TSMC. Their business model win over Intel and samsung for such long turn because its founder submission and his founder saw every ups and down of chips from first day of transistor productions. Taiwanese behemoth.  Jack Kilby invented the chip and Morri Chang is the founder of the TSMC. 





































